version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.3.0-node-browsers
      - image: circleci/mariadb:10.4
    environment:
      - DB_CONNECTION: circle_testing
    working_directory: ~/ci-demo
    steps:
      - checkout
      - run:
          name: Update apt-get
          command: sudo apt-get update
      - run:
          name: Docker php extensions install
          command: sudo docker-php-ext-install pdo_mysql
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run:
          name: Install PHP libraries
          command: composer install -n --prefer-dist
      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}
      - run:
          name: Run PHPUnit
          command: vendor/bin/phpunit
      #heroku deploy
      - deploy:
          name: Deploy main to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git main
            fi
jobs:
    # build ジョブ: CircleCI 上で Docker コンテナを作成してテストする
  build:
    docker:
      - image: alpine
    steps:
      - checkout
      - run:
        name: Echo Test
        command: echo "CircleCI Test"
  # deploy ジョブ: EC2 に SSH 接続して、デプロイを実行する
  deploy:
      machine:
        image: circleci/classic:edge
      steps:
        - checkout
        # CircleCI に登録した秘密鍵を呼び出す
        - add_ssh_keys:
        # CircleCI に登録した環境変数を使って SSH
        - run: ssh ${USER_NAME}@${HOST_NAME} 'cd /var/www/html/TakanoriShima-case_work && git pull'
 
workflows:
    version: 2
    # build_and_deploy ジョブ: 一番最初に呼ばれるジョブ
    build_and_deploy:
      # build ジョブと deploy ジョブを登録する
      jobs:
        - build
        - deploy:
          requires:
            # 依存性あるから deploy ジョブより先に build ジョブを実行してね、という命令
            - build
          # master ブランチに push された場合のみ deploy ジョブを実行する
          filters:
            branches:
              only: main      